---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <section class="py-8 px-4 flex justify-center">
    <div id="search-container" class="bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-6 rounded-lg shadow-md w-full max-w-3xl text-center transition-opacity duration-500">
      <h1 class="text-3xl font-bold mb-4">Generate Property Data</h1>
      <p class="text-lg text-gray-700 dark:text-gray-300 mb-4">Enter a city and state below to generate property descriptions using AI.</p>
      
      <form id="search-form" class="search-form flex justify-center gap-4 mb-1">
        <input 
          type="text" 
          id="city-input" 
          placeholder="Enter city" 
          required 
          class="px-4 py-2 border rounded w-full bg-gray-200 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100" 
        />
        <input 
          type="text" 
          id="state-input" 
          placeholder="Enter state" 
          required 
          class="px-4 py-2 border rounded w-full bg-gray-200 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100" 
        />
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Generate</button>
      </form>

      <p class="text-sm text-gray-500 dark:text-gray-400 mt-3">
        ...or you can <a href="#" id="map-search" class="text-blue-600">map search</a>
      </p>
    </div>

    <div id="loading" class="hidden flex flex-col items-center justify-center text-center mt-8 transition-all duration-500">
      <i class="fas fa-spinner fa-spin text-4xl text-blue-500"></i>
      <p class="mt-4 text-xl transition-opacity duration-500" id="loading-text">Generating property data...</p>
    </div>
    
    <div id="output" class="mt-8 grid grid-cols-1 gap-6"></div>

    <div id="no-data" class="hidden text-center text-gray-600 dark:text-gray-400 mt-8">No data generated for your search.</div>
  </section>

  <div id="map-popup" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg w-3/4 max-w-4xl p-6 relative">
      <button id="close-map" class="absolute top-2 right-2 text-gray-600 dark:text-gray-300">&times;</button>
      <h2 class="text-2xl font-bold mb-4">Select a Region</h2>
      <input type="text" id="map-search-input" placeholder="Search for a location" class="px-4 py-2 border rounded w-full mb-4" />
      <div id="map" class="w-full h-96 rounded-lg mb-4"></div>
      <button id="submit-region" class="bg-blue-600 text-white px-4 py-2 rounded">Generate Based on Region</button>
    </div>
  </div>

  <script>
    const leafletCss = document.createElement('link');
    leafletCss.rel = 'stylesheet';
    leafletCss.href = 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css';
    document.head.appendChild(leafletCss);

    const leafletScript = document.createElement('script');
    leafletScript.src = 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.js';
    leafletScript.onload = function() {
    const images = [
      "https://page-assets.foxtons.co.uk/img/masthead/interiors_kitchen.jpg",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRJcX2nqVi4Cx5MIP78R0RsdNWVgHPlbqXYUA&s",
      "https://images.adsttc.com/media/images/5cde/9f86/284d/d164/0900/0043/newsletter/012.jpg?1558093648",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5kdUsk78YijC9OnlMNzKLKJr7ANpmHPgiIw&s",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_Vm0rIbuWfFTNtJIg1ba69iQsjJldiCDHFw&s",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ8lkFpe5CAfbW0w6Ok4_NQgh5h-cquHn1VqQ&s",
      "https://www.home-designing.com/wp-content/uploads/2013/06/modern-neutral-living-room-4.jpg",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTb5I5x3QKYqGyarofDQmhpYmQyRPyGws-2og&s",
      "https://cdn.shopify.com/s/files/1/2527/1508/files/Property_Styling_-_12-2.jpg?v=1692590413",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRilfSJXZY4McaRARD-3qRmGvCEh_dk4n_dA&s",
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT5z9ewjHobvjeS_WGHJ_newgA21lGJuA2APQ&s",
      "https://page-assets.foxtons.co.uk/news-images/2018/03/best-family-homes-1/720.jpg",
      "https://page-assets.foxtons.co.uk/news-images/2018/03/best-family-homes-9/720.jpg",
      "https://page-assets.foxtons.co.uk/news-images/2018/03/best-family-homes-1/720.jpg",
      "https://cloudfront-eu-central-1.images.arcpublishing.com/irishtimes/T5IANN2EPM2A4TVMFATVTYWMIY.jpg",
      "https://justdoproperty.co.uk/wp-content/uploads/2020/05/interiordesign.png"
    ];

      document.getElementById('search-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const cityInputValue = document.getElementById('city-input').value;
        const stateInputValue = document.getElementById('state-input').value;

        if (!cityInputValue || !stateInputValue) {
          console.error("City or state input is empty");
          return;
        }

        const searchContainer = document.getElementById('search-container');
        const loadingDiv = document.getElementById('loading');
        const outputDiv = document.getElementById('output');
        const noDataDiv = document.getElementById('no-data');

        searchContainer.classList.add('opacity-0');

        setTimeout(() => {
          searchContainer.remove();
          loadingDiv.classList.remove('hidden');
        }, 500);

        try {
          const response = await fetch(`/api/properties.json?city=${encodeURIComponent(cityInputValue)}&state=${encodeURIComponent(stateInputValue)}`);
          const data = await response.json();

          if (response.ok && data.output) {
            loadingDiv.classList.add('hidden');
            outputDiv.innerHTML = ''; 
            const entries = data.output.split('---').map(entry => entry.trim());

            entries.forEach(entry => {
              const [title, description] = entry.split('--').map(part => part.trim());
              const randomImage = images[Math.floor(Math.random() * images.length)];
              const card = document.createElement('div');
              card.classList.add('flex', 'items-start', 'bg-white', 'dark:bg-gray-800', 'p-4', 'rounded-lg', 'shadow-md');

              card.innerHTML = `
                <img src="${randomImage}" alt="Property Image" class="w-[350px] h-[150px] object-cover rounded-lg mr-4" />
                <div>
                  <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100">${title}</h2>
                  <p class="text-md text-gray-700 dark:text-gray-300 mt-2">${description}</p>
                </div>
              `;
              outputDiv.appendChild(card);
            });

            outputDiv.classList.remove('hidden');
          } else {
            loadingDiv.classList.add('hidden');
            noDataDiv.classList.remove('hidden');
            console.error('Error fetching data:', data.error);
          }
        } catch (error) {
          loadingDiv.classList.add('hidden');
          noDataDiv.classList.remove('hidden');
          console.error('Fetch error:', error);
        }
      });

      document.getElementById('map-search').addEventListener('click', function(event) {
        event.preventDefault();

        const mapPopup = document.getElementById('map-popup');
        mapPopup.classList.remove('hidden');

        const map = L.map('map').setView([51.505, -0.09], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        const searchInput = document.getElementById('map-search-input');
        const searchControl = L.Control.geocoder({
          defaultMarkGeocode: false
        })
        .on('markgeocode', function(e) {
          const bbox = e.geocode.bbox;
          const poly = L.polygon([
            bbox.getSouthEast(),
            bbox.getNorthEast(),
            bbox.getNorthWest(),
            bbox.getSouthWest()
          ]).addTo(map);
          map.fitBounds(poly.getBounds());
        })
        .addTo(map);

        searchInput.addEventListener('change', function() {
          searchControl.geocode(searchInput.value);
        });

        let selectedRegion = null;

        map.on('click', function(e) {
          if (selectedRegion) {
            selectedRegion.remove();
          }
          selectedRegion = L.circle(e.latlng, { radius: 500 }).addTo(map);
        });

        document.getElementById('submit-region').addEventListener('click', function() {
          if (selectedRegion) {
            const regionData = selectedRegion.getLatLng();
            const regionString = `Latitude: ${regionData.lat}, Longitude: ${regionData.lng}`;
            document.getElementById('city-input').value = regionString;
            mapPopup.classList.add('hidden');
          } else {
            alert('Please select a region on the map.');
          }
        });

        document.getElementById('close-map').addEventListener('click', function() {
          mapPopup.classList.add('hidden');
        });
      });
    };

    document.head.appendChild(leafletScript);
  </script>
</Layout>