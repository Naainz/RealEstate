---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <section class="py-8 px-4 flex justify-center">
    <div id="search-container" class="bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-6 rounded-lg shadow-md w-full max-w-3xl text-center transition-opacity duration-500">
      <h1 class="text-3xl font-bold mb-4">Generate Property Data</h1>
      <p class="text-lg text-gray-700 dark:text-gray-300 mb-4">Enter a city and state below to generate property descriptions using AI.</p>
      
      <form id="search-form" class="search-form flex justify-center gap-4 mb-1">
        <input 
          type="text" 
          id="city-input" 
          placeholder="Enter city" 
          required 
          class="px-4 py-2 border rounded w-full bg-gray-200 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100" 
        />
        <input 
          type="text" 
          id="state-input" 
          placeholder="Enter state" 
          required 
          class="px-4 py-2 border rounded w-full bg-gray-200 dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100" 
        />
        <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Generate</button>
      </form>
    </div>

    <div id="loading" class="hidden flex flex-col items-center justify-center text-center mt-8 transition-all duration-500">
      <i class="fas fa-spinner fa-spin text-4xl text-blue-500"></i>
      <p class="mt-4 text-xl transition-opacity duration-500" id="loading-text">Generating property data...</p>
    </div>
    
    <div id="output" class="mt-8 grid grid-cols-1 gap-6"></div>

    <div id="no-data" class="hidden text-center text-gray-600 dark:text-gray-400 mt-8">No data generated for your search.</div>
  </section>

  <script>
    document.getElementById('search-form').addEventListener('submit', async (event) => {
      event.preventDefault();
      const cityInputValue = document.getElementById('city-input').value;
      const stateInputValue = document.getElementById('state-input').value;

      if (!cityInputValue || !stateInputValue) {
        console.error("City or state input is empty");
        return;
      }

      const searchContainer = document.getElementById('search-container');
      const loadingDiv = document.getElementById('loading');
      const outputDiv = document.getElementById('output');
      const noDataDiv = document.getElementById('no-data');

      searchContainer.classList.add('opacity-0');

      setTimeout(() => {
        searchContainer.remove();
        loadingDiv.classList.remove('hidden');
      }, 500);

      try {
        const response = await fetch(`/api/properties.json?city=${encodeURIComponent(cityInputValue)}&state=${encodeURIComponent(stateInputValue)}`);
        const data = await response.json();

        if (response.ok && data.output) {
          loadingDiv.classList.add('hidden');
          outputDiv.innerHTML = ''; 
          const entries = data.output.split('---').map(entry => entry.trim());

          entries.forEach(entry => {
            const [title, description] = entry.split('--').map(part => part.trim());
            const card = document.createElement('div');
            card.classList.add('flex', 'items-start', 'bg-white', 'dark:bg-gray-800', 'p-4', 'rounded-lg', 'shadow-md');

            card.innerHTML = `
              <img src="https://via.placeholder.com/350x150" alt="Placeholder Image" class="w-[350px] h-[150px] object-cover rounded-lg mr-4" />
              <div>
                <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100">${title}</h2>
                <p class="text-md text-gray-700 dark:text-gray-300 mt-2">${description}</p>
              </div>
            `;
            outputDiv.appendChild(card);
          });

          outputDiv.classList.remove('hidden');
        } else {
          loadingDiv.classList.add('hidden');
          noDataDiv.classList.remove('hidden');
          console.error('Error fetching data:', data.error);
        }
      } catch (error) {
        loadingDiv.classList.add('hidden');
        noDataDiv.classList.remove('hidden');
        console.error('Fetch error:', error);
      }
    });
  </script>
</Layout>
